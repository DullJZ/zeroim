name: Docker Image CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  # 添加手动触发支持
  workflow_dispatch:
    inputs:
      version_tag:
        description: '版本标签(不填则使用latest)'
        required: false
        default: 'latest'

env:
  REGISTRY: registry.cn-shenzhen.aliyuncs.com
  NAMESPACE: zeroim

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.23'
        cache: true
    
    # 设置 QEMU 以支持多架构构建
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3
      
    # 设置 Docker Buildx
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    # 构建多架构二进制文件
    - name: Build Binary
      run: |
        mkdir -p bin
        # 解析目标平台并构建对应架构的二进制文件
        platforms="${{ github.event.inputs.platforms || 'linux/amd64,linux/arm64' }}"
        if [[ $platforms == *"amd64"* ]]; then
          GOOS=linux GOARCH=amd64 CGO_ENABLED=0 go build -o bin/user-api-amd64 ./apps/user/api
          GOOS=linux GOARCH=amd64 CGO_ENABLED=0 go build -o bin/user-rpc-amd64 ./apps/user/rpc
          GOOS=linux GOARCH=amd64 CGO_ENABLED=0 go build -o bin/social-rpc-amd64 ./apps/social/rpc
        fi
        if [[ $platforms == *"arm64"* ]]; then
          GOOS=linux GOARCH=arm64 CGO_ENABLED=0 go build -o bin/user-api-arm64 ./apps/user/api
          GOOS=linux GOARCH=arm64 CGO_ENABLED=0 go build -o bin/user-rpc-arm64 ./apps/user/rpc
          GOOS=linux GOARCH=arm64 CGO_ENABLED=0 go build -o bin/social-rpc-arm64 ./apps/social/rpc
        fi

    - name: Login to Aliyun Container Registry
      uses: docker/login-action@v2
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ secrets.ALIYUN_USERNAME }}
        password: ${{ secrets.ALIYUN_PASSWORD }}

    # 使用 buildx 构建并推送多架构镜像
    - name: Build user-api and push
      uses: docker/build-push-action@v4
      with:
        context: .
        file: ./deploy/dockerfile/Dockerfile_user_api_dev
        push: true
        platforms: ${{ github.event.inputs.platforms || 'linux/amd64,linux/arm64' }}
        tags: |
          ${{ env.REGISTRY }}/${{ env.NAMESPACE }}/test-user-api:${{ github.event.inputs.version_tag || 'latest' }}
          ${{ env.REGISTRY }}/${{ env.NAMESPACE }}/test-user-api:${{ github.sha }}

    - name: Build user-rpc and push
      uses: docker/build-push-action@v4
      with:
        context: .
        file: ./deploy/dockerfile/Dockerfile_user_rpc_dev
        push: true
        platforms: ${{ github.event.inputs.platforms || 'linux/amd64,linux/arm64' }}
        tags: |
          ${{ env.REGISTRY }}/${{ env.NAMESPACE }}/test-user-rpc:${{ github.event.inputs.version_tag || 'latest' }}
          ${{ env.REGISTRY }}/${{ env.NAMESPACE }}/test-user-rpc:${{ github.sha }}

    - name: Build social-rpc and push
      uses: docker/build-push-action@v4
      with:
        context: .
        file: ./deploy/dockerfile/Dockerfile_social_rpc_dev
        push: true
        platforms: ${{ github.event.inputs.platforms || 'linux/amd64,linux/arm64' }}
        tags: |
          ${{ env.REGISTRY }}/${{ env.NAMESPACE }}/test-social-rpc:${{ github.event.inputs.version_tag || 'latest' }}
          ${{ env.REGISTRY }}/${{ env.NAMESPACE }}/test-social-rpc:${{ github.sha }}
